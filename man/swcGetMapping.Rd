% Generated by roxygen2 (4.0.0): do not edit by hand
\name{swcGetMapping}
\alias{swcGetMapping}
\title{Compute a matching table between two lists of municipality IDs}
\usage{
swcGetMapping(swc = swcGetData(), ids.from, ids.to)
}
\arguments{
  \item{swc}{Data as read by the function
  \code{swcReadData}, defaults to \code{swcGetData()}.}

  \item{ids.from}{A list of "source" municipality IDs}

  \item{ids.to}{A list of "target" municipality IDs}
}
\value{
A data frame with columns prefixed by \code{from.} and \code{to} that
  represents the computed match.  The municipality IDs are stored in the
  columns \code{from.mId} and \code{to.mId}.  In addition, the return value
  has four attributes that represent municipality IDs that were not valid
  or existed but were not passed to this function for either point in time.
}
\description{
For two lists of Swiss municipality IDs at any two points in time, this
function creates a data frame with two columns where each row represents
a match between municipality IDs.  This can be used as an intermediate
table for merging two data sets with municipality identifiers taken at
different, possibly unknown, points in time.
}
\examples{
data(SwissBirths)
mapping <- with(SwissBirths, swcGetMapping(ids.from=MunicipalityID[Year == "1970"], ids.to=MunicipalityID[Year == "1978"]))
with(mapping, sum(mapping$from.mId != mapping$to.mId))
}

