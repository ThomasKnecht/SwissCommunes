% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/swcGetMapping.R
\name{getMunicipalityMappingWorker}
\alias{getMunicipalityMappingWorker}
\title{Here, we receive the most probable mutation number in the "municipality
mutations" data set as parameter.
We assume that the first list is older than the second list:
Then we iterate over all mutations.  We must cover all mutations,
because a mutation A -> A' -> B would be lost otherwise if A'
is not in either municipality list.
The mapping will be represented as a linear transformation, encoded
as a sparse matrix with rows as "from" and columns as "to" municipalitys.
Each mutation is converted to such a matrix, the matrix product of
all mutations will be the final mapping.  We start with a unit
matrix (the identity transformation) of all "from" columns:
Subsequently, this transformation is augmented with all mutations
between "from" and "to"}
\usage{
getMunicipalityMappingWorker(swc, hist.list.from, mid.from, hist.list.to,
  mid.to)
}
\description{
Here, we receive the most probable mutation number in the "municipality
mutations" data set as parameter.
We assume that the first list is older than the second list:
Then we iterate over all mutations.  We must cover all mutations,
because a mutation A -> A' -> B would be lost otherwise if A'
is not in either municipality list.
The mapping will be represented as a linear transformation, encoded
as a sparse matrix with rows as "from" and columns as "to" municipalitys.
Each mutation is converted to such a matrix, the matrix product of
all mutations will be the final mapping.  We start with a unit
matrix (the identity transformation) of all "from" columns:
Subsequently, this transformation is augmented with all mutations
between "from" and "to"
}

